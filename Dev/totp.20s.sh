#!/bin/bash

# <bitbar.title>Authenticator</bitbar.title>
# <bitbar.version>v0.1</bitbar.version>
# <bitbar.author>Gunasekaran Namachivayam</bitbar.author>
# <bitbar.author.github>gunasekar</bitbar.author.github>
# <bitbar.desc>This plugin will generate the TOTP tokens and allows to copy them to clipboard</bitbar.desc>

# Hack for language not being set properly and unicode support
export LANG="${LANG:-en_US.UTF-8}"

# update the key value pairs as per your requirement
# Key - for your reference to identify a TOTP Account
# Value - base32 secret key corresponding to the TOTP Account
totp_secrets=( "OpenVPN:2b2drladcdoxtpheuom6t4zjsr6tq7ix"
        "BitBucket:2b2drladcdoxtpheuom6t4zjsr6tq7ix"
        "GitHub:2b2drladcdoxtpheuom6t4zjsr6tq7ix"
        "Okta:2b2drladcdoxtpheuom6t4zjsr6tq7ix"
        "GrabTaxi:2b2drladcdoxtpheuom6t4zjsr6tq7ix" )

# oath-toolkit needs to be installed. Use 'brew install oath-toolkit'
# update the appropriate path of oathtool binary below
oathtool="/usr/local/bin/oathtool"

function get-totp {
  $oathtool --totp -b "$1"
}

if [[ "$1" == "copy" ]]; then
  echo -n "$(echo -n "$2")" | pbcopy
  exit
fi

# Default Lock icon
echo " | image=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"
# Google Authenticator icon
# If you would like to change the icon to Google Authenticator
# comment above and uncomment below
#echo " | image=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"

echo '---'
echo "Clear Clipboard | bash='$0' param1=copy param2=' ' terminal=false"
echo "---"

for secret in "${totp_secrets[@]}" ; do
    KEY="${secret%%:*}"
    VALUE="${secret##*:}"
    token=$( get-totp "$VALUE" )
    echo "$KEY | bash='$0' param1=copy param2='$token' terminal=false"
done
